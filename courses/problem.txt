1.No module named 'fastai.transforms'
https://forums.fast.ai/t/howto-installation-on-windows/10439
Whilst Windows isn’t officially supported for fastai or the lessons at this stage, it does seem to be working now so those with the patience and boldness to venture into something a little new and somewhat untested, here’s instructions on getting started running on a GPU on Windows. (NB: most people using Windows on their laptops are advised to use a cloud GPU provider like Paperspace - accessing a cloud provider from Windows is well supported and tested for this course).

You must have an Nvidia GPU installed, and have installed the most recent Nvidia drivers
Install Anaconda (Python 3.6) using the 64-bit graphical installer 776. Choose the option to install for “this user only”
Install Git for Windows 905
Run Anaconda Prompt from your start menu, and type:
git clone https://github.com/fastai/fastai.git
Once the repo is cloned, you’re ready to set up fastai:
cd fastai
conda env update
Activate your new environment (NB: you must type this command every time you run Anaconda):
activate fastai
Install ipython widgets into jupyter:
jupyter nbextension enable --py widgetsnbextension --sys-prefix
Replace the linux symlink with a Windows one (note that this requires an admin command prompt if you don’t have a fully updated version of Windows 10):
cd courses\dl1
del fastai
mklink /d fastai ..\..\old\fastai
cd ..\..

2.
No module named 'bcolz' -> pip install bcolz
No module named 'graphviz' -> pip install graphviz
No module named 'sklearn_pandas' -> pip install sklearn_pandas
No module named 'isoweek' -> pip install isoweek
No module named 'pandas_summary' -> pip install pandas_summary
No module named 'tqdm' -> pip install tqdm
No module named 'torchtext' -> pip install torchtext

3.The error was: “[sprintf] expecting number but found string” See error console for details.”
pip install nbclean

import nbclean as nbc
path_original_notebook = 'D:/tyang/fastai/courses/dl1/lesson1_.ipynb'
path_save = 'D:/tyang/fastai/courses/dl1/lesson1_.ipynb'
ntbk = nbc.NotebookCleaner(path_original_notebook)
ntbk.clear('output')
ntbk.save(path_save)

4.TypeError: can’t convert CUDA tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
site-packages/torch/tensor.py replaced self.numpy() with self.cpu().numpy()

5."TypeError: read_feather() got an unexpected keyword argument 'nthreads'"
C:\Anaconda2\envs\py3\Lib\site-packages\pandas\io\feather_format.py  
change to if LooseVersion(feather.__version__) <= LooseVersion('0.4.0'):

6.warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
将fastai/column_data.py 里 F.sigmoid -> torch.sigmoid

7.How to clear some GPU memory?
In newest PyTorch, you can use torch.cuda.empty_cache() to clear the cached memory.
def pretty_size(size):
    """Pretty prints a torch.Size object"""
    assert(isinstance(size, torch.Size))
    return " × ".join(map(str, size))

def dump_tensors(gpu_only=True):
    """Prints a list of the Tensors being tracked by the garbage collector."""
    import gc
    total_size = 0
    for obj in gc.get_objects():
        try:
            if torch.is_tensor(obj):
                if not gpu_only or obj.is_cuda:
                    print("%s:%s%s %s" % (type(obj).__name__,
                                          " GPU" if obj.is_cuda else "",
                                          " pinned" if obj.is_pinned else "",
                                          pretty_size(obj.size())))
                    total_size += obj.numel()
            elif hasattr(obj, "data") and torch.is_tensor(obj.data):
                if not gpu_only or obj.is_cuda:
                    print("%s → %s:%s%s%s%s %s" % (type(obj).__name__,
                                                   type(obj.data).__name__,
                                                   " GPU" if obj.is_cuda else "",
                                                   " pinned" if obj.data.is_pinned else "",
                                                   " grad" if obj.requires_grad else "",
                                                   " volatile" if obj.volatile else "",
                                                   pretty_size(obj.data.size())))
                    total_size += obj.data.numel()
        except Exception as e:
            pass
    print("Total size:", total_size)
dump_tensors()

8.AttributeError: 'JpegImageFile' object has no attribute 'shape'
im = val_tfms(PIL.Image.open(test_image)) -> im = val_tfms(np.array(PIL.Image.open(test_image)))